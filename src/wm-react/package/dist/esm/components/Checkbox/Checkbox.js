/* @copyright Stadt Wien - Wiener Melange 200 */
import{s as e}from"../../lit-element-8d7b5fe2.js";import{x as t}from"../../lit-html-34d0b6a8.js";import{FormOption as r}from"../misc/form-option.js";import{dispatchCustomEvent as i}from"../misc/utils.js";import"../../unsafe-html-4e49b66a.js";import{n as s}from"../../when-741bb8d9.js";import{SharedInfoMixin as o}from"../misc/shared-info.js";import{ErrorStateController as a}from"../misc/error-state-controller.js";import{FormStateManager as n}from"../misc/form-state-manager.js";import"../misc/form-wrapper.js";import"../misc/slot.js";import"../../class-map-b15037ef.js";import"../../directive-16e189ed.js";import"../misc/error-tracking.js";import"../../form-item.styles-b671e7a9.js";import"../../form.styles-3cb5bbeb.js";import"../../if-defined-d257cee1.js";import"../../live-77c73e47.js";import"../../wiener-melange.bundle.min-ae18d627.js";const l=n(o(r(e)));class h extends l{static properties={...super.properties,hasError:{type:Boolean,reflect:!0},error:{type:String},errormessage:{type:String},summaryErrormessage:{type:String,attribute:"summary-errormessage"},validate:{type:Boolean,reflect:!0},showErrors:{type:Boolean,reflect:!0},info:{type:String},_infoOpen:{type:Boolean},_initialCheckedValues:{state:!0}};constructor(){super(),this.type="checkbox",this.value=[],this.errormessage="",this.summaryErrormessage="",this.hasError=!1,this.error="",this.showErrors=!1,this.validate=!1,this.info=void 0,this._infoOpen=!1,this._initialCheckedValues=[],this._errorController=new a(this)}updated(e){if(super.updated(e),e.has("checked")){const e=this.checked?this.checked.split(";"):[];this.value=e,!this._initialCheckedValues.length&&e.length&&(this._initialCheckedValues=[...e])}}_handleChange(e){const t=Array.from(this._items).filter((e=>e.checked)).map((e=>e.value));this.value=t,this.checked=t.join(";"),(this.validate||this.showErrors)&&this._errorController.validate(),i(this,"change",{value:this.value,checked:t.length>0}),this._internals.setFormValue(this.value.join(","))}checkValidity(){const e=Array.from(this.shadowRoot?.querySelectorAll("input[type='checkbox']")||[]),t=e.some((e=>e.checked));let r="";return this.required&&!t?(r=this.errormessage||"Bitte wählen Sie mindestens eine Option aus",e.forEach((e=>{e&&"function"==typeof e.setCustomValidity&&e.setCustomValidity(r)})),this._errorController.setError(r)):(e.forEach((e=>{e&&"function"==typeof e.setCustomValidity&&e.setCustomValidity("")})),this._errorController.clearError()),r}showError(e){this._errorController.setError(e)}clearError(){this._errorController.clearError()}setDisabled(e){this.disabled=Boolean(e),e&&this._errorController.clearError();const t=this.shadowRoot?.querySelectorAll('input[type="checkbox"]');t&&t.forEach((t=>{e?t.setAttribute("disabled",""):t.removeAttribute("disabled")})),i(this,"disabled-changed",{disabled:this.disabled})}_performValidation(){if(!0===this.disabled)return"";const e=Array.from(this.shadowRoot?.querySelectorAll("input[type='checkbox']")||[]),t=e.some((e=>e.checked)),r=this.required&&!t?this.errormessage||"Bitte wählen Sie mindestens eine Option aus":"";if(r?(e.forEach((e=>{e&&"function"==typeof e.setCustomValidity&&e.setCustomValidity(r)})),this._errorController.setError(r)):(e.forEach((e=>{e&&"function"==typeof e.setCustomValidity&&e.setCustomValidity("")})),this._errorController.clearError()),this._internals&&"function"==typeof this._internals.setValidity)try{r?this._internals.setValidity({customError:!0},r,e[0]):this._internals.setValidity({},"",e[0])}catch(e){console.warn("Error updating form internals validity:",e)}return r}_handleEvent(e){if(!this.disabled)switch(i(this,e.type,{value:this.value,target:e.target}),e.type){case"change":this._handleChange(e);break;case"input":this._handleInput(e);break;case"focus":this._handleFocus(e);break;case"blur":this._handleBlur(e)}}reset(){try{const e=this._initialCheckedValues||[];if(this.value=[...e],this.checked=e.join(";"),this._items&&this._items.forEach((t=>{t&&(t.checked=e.includes(t.value),"function"==typeof t.setCustomValidity&&t.setCustomValidity(""),t.removeAttribute("aria-invalid"))})),this._errorController.clearError(),this._internals){this._internals.setFormValue(this.value.join(","));try{this._internals.setValidity({},"")}catch(e){console.warn("Error clearing form internals validity during reset:",e)}}i(this,"change",{value:this.value,checked:e.length>0,isReset:!0})}catch(e){console.error("Error in wm-checkbox reset method:",e)}}formResetCallback(){super.formResetCallback?.(),this.reset()}async firstUpdated(e){super.firstUpdated&&super.firstUpdated(e),await this.updateComplete,console.log("Checkbox component dispatching wm-defined event"),i(this,"defined",{component:this.tagName.toLowerCase(),id:this.id})}render(){return t`
            ${this._renderItem()}
            ${s(this.hasInfo,(()=>this._renderInfoButton("--button-min-height:30px; --button-min-width:30px; touch-action: manipulation; --info-button-pos-top:0; --info-button-pos-right:-14px;")))}
            ${s(this.hasInfo,(()=>this._renderInfoText()))}
        `}}customElements.define("wm-checkbox",h);const c="wm-checkbox";export{h as Checkbox,c as tagName};
