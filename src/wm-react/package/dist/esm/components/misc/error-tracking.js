/* @copyright Stadt Wien - Wiener Melange 200 */
class r{constructor(){this._processedErrorIds=new Set,this._errorsByFieldId=new Map,this._suppressedErrorIds=new Set,this._isReset=!0,this._currentIteration=0,this._errorsByIteration=new Map}reset(r=!1){r?(this._errorsByFieldId.size>0&&(this._errorsByIteration.set(this._currentIteration,new Map(this._errorsByFieldId)),this._currentIteration++),this._errorsByFieldId.clear()):(this._processedErrorIds.clear(),this._errorsByFieldId.clear(),this._suppressedErrorIds.clear(),this._errorsByIteration.clear(),this._currentIteration=0),this._isReset=!0}continueIteration(){return this.reset(!0),this._currentIteration}getCurrentIteration(){return this._currentIteration}isErrorProcessed(r,e=!1){return!!r&&(!!this._suppressedErrorIds.has(r)||(e?this._errorsByFieldId.has(r):this._processedErrorIds.has(r)))}trackError(r,e={}){r&&(this._isReset=!1,this._processedErrorIds.add(r),this._errorsByFieldId.set(r,{...e,timestamp:Date.now(),iteration:this._currentIteration}))}suppressError(r){r&&this._suppressedErrorIds.add(r)}isErrorSuppressed(r){return!!r&&this._suppressedErrorIds.has(r)}getErrors(r=!1){const e=[];return this._errorsByFieldId.forEach(((r,s)=>{e.push({id:s,...r})})),r&&this._errorsByIteration.forEach(((r,s)=>{r.forEach(((r,t)=>{e.some((r=>r.id===t))||e.push({id:t,...r,iteration:s})}))})),e}getErrorsForIteration(r){const e=[];if(r===this._currentIteration)return this._errorsByFieldId.forEach(((r,s)=>{e.push({id:s,...r})})),e;const s=this._errorsByIteration.get(r);return s&&s.forEach(((s,t)=>{e.push({id:t,...s,iteration:r})})),e}hasErrors(r=!1){return this._errorsByFieldId.size>0||!!(r&&this._errorsByIteration.size>0)}hasErrorsInIteration(r){if(r===this._currentIteration)return this._errorsByFieldId.size>0;const e=this._errorsByIteration.get(r);return e&&e.size>0}getErrorCount(r=!1){if(!r)return this._errorsByFieldId.size;const e=new Set([...this._errorsByFieldId.keys()]);return this._errorsByIteration.forEach((r=>{r.forEach(((r,s)=>{e.add(s)}))})),e.size}}const e=new r,s=e=>class extends e{constructor(){super(),this._errorTracker=new r}processErrors(r,e=!0){return this._errorTracker.processErrors(r,e)}resetErrorTracking(r=!1){this._errorTracker.reset(r)}continueErrorIteration(){this._errorTracker.continueIteration()}};export{s as ErrorTrackingMixin,r as ErrorTrackingService,e as errorTracker};
